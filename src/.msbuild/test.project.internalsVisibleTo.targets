<?xml version="1.0" encoding="utf-8"?>
<Project>

  <!--
    This automatically applies InternalsVisibleToAttribute to all the projects
    so their internal classes will be visible to all the projects with '.Tests' name ending.
    -->

  <PropertyGroup Condition="'$(TestsDir)'!=''">
    <TestsDirEndsWithSlash>$(TestsDir.EndsWith('\'))</TestsDirEndsWithSlash>
    <TestsDir Condition="'$(TestsDirEndsWithSlash)'=='False'">$(TestsDir)\</TestsDir>
  </PropertyGroup>

  <PropertyGroup>
    <InternalsVisibleToAllTestsProjects Condition="'$(InternalsVisibleToAllTestsProjects)'==''">false</InternalsVisibleToAllTestsProjects>
  </PropertyGroup>

  <ItemGroup Condition="'$(InternalsVisibleToAllTestsProjects)'=='true' And '$(TestsDir)'!='' And Exists('$(TestsDir)')">
    <InternalVisibleToProj Include="$(TestsDir)**\*.Tests.csproj" />
    <InternalsVisibleTo Include="@(InternalVisibleToProj->'%(Filename)')" />
  </ItemGroup>

  <Target Condition="'$(InternalsVisibleToAllTestsProjects)'=='true'" Name="AllTestsInternalsVisibleTo" BeforeTargets="BeforeCompile">
    <!--Check that TestsDir set-->
    <Warning Condition="'$(TestsDir)'==''"
             Text="The PropertyGroup 'TestsDir' is empty. Fill 'TestsDir' or set 'InternalsVisibleToAllTestsProjects' to False"
             File="$(MSBuildProjectFullPath)" />
    <Warning Condition="'$(TestsDir)'!='' And !Exists('$(TestsDir)')"
             Text="The PropertyGroup 'TestsDir' is '$(TestsDir)'. Fill 'TestsDir' or set 'InternalsVisibleToAllTestsProjects' to False"
             File="$(MSBuildProjectFullPath)" />

  </Target>

</Project>